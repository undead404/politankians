---
import { readFile } from 'fs/promises';
import type { GetStaticPaths } from "astro";
import { format } from 'date-fns';

import Layout from '../../components/layout.astro';
import ParticipantName from '../../components/participant-name.astro';
import type { Act } from '../../schemas/act';
import getActs from '../../services/google-sheets';

export const getStaticPaths = (async () => {
    const spreadsheetsData = await readFile('./spreadsheets.txt', { encoding: 'utf8' });
    const urls = spreadsheetsData.split('\n');
    const acts = await getActs(urls);
    return acts.map(act => ({
        params: {
            id: act.objectID
        },
        props: { act }
    }));
}) satisfies GetStaticPaths;

export interface Props {
    act: Act;
}

const { act } = Astro.props;
---
<Layout title={act.title}>
    <style>
      section {
        margin-bottom: 2rem;
      }
      h2 {
        color: #4CAF50;
        border-bottom: 2px solid #4CAF50;
        padding-bottom: 0.5rem;
        font-family: 'Georgia', serif;
      }
      time {
        font-size: 1.2rem;
        color: #555;
      }
      ul {
        list-style-type: none;
        padding: 0;
      }
      li {
        background-color: #f9f9f9;
        margin: 0.5rem 0;
        padding: 0.5rem;
        border: 1px solid #ddd;
        border-radius: 4px;
      }
      footer {
        margin-top: 2rem;
        padding-top: 1rem;
        border-top: 1px solid #ddd;
        color: #777;
      }
      .participant-note {
        margin-top: 0.5rem;
        padding: 0.5rem;
        background-color: #f9f9f9;
        border-left: 4px solid #4CAF50;
        font-size: 0.9rem;
        color: #555;
        border-radius: 4px;
        }
    </style>
    <section>
        <h2>Дата</h2>
        <time datetime={format(act.date, 'yyyy-MM-dd')}>{format(new Date(act.date), 'dd.MM.yyyy')}</time>
    </section>
    <section>
        <h2>Учасники</h2>
        <ul>
            {Object.values(act.participants).map(participant => (
                <li><strong>{participant.role}:</strong> <ParticipantName participant={participant} />
                {participant.note && <div class="participant-note">{participant.note}</div>}</li>
            ))}
        </ul>
    </section>
    <footer>
        <p><strong>Object ID:</strong> {act.objectID}</p>
    </footer>
</Layout>