---
import _ from 'lodash';

import Layout from '../../components/layout.astro';
import SettlementName from '../../components/settlement-name.astro';
import TitledLink from '../../components/titled-link.astro';
import { getCollection } from '../../services/astro-content';

const archiveItems = await getCollection('archive-items');
const parishRegisterTables = await getCollection('parish-register-tables');
const confessionalLists = await getCollection('confessional-lists');
const revisions = await getCollection('revision-tables');
const archives = await getCollection('archives');
const unstructured = await getCollection('unstructured');
const COLLECTIONS = {
  'Confessional list': confessionalLists,
  'Parish register': parishRegisterTables,
  Revision: revisions,
  Unstructured: unstructured,
};
const archiveItemTuples: [
  (typeof archiveItems)[0],
  (typeof parishRegisterTables)[0] | (typeof confessionalLists)[0] | undefined,
][] = _.sortBy(
  archiveItems.map((archiveItem) => {
    const table = COLLECTIONS[archiveItem.data.genre].find(
      ({ id }) => id === archiveItem.id,
    );
    console.log(table.data.settlements);
    if (!table) {
      throw new Error(`table for ${archiveItem.id} not found`);
    }
    return [archiveItem, table];
  }),
  ['1.data.years'],
);

const ARCHIVE_ITEM_TYPES = {
  'Confessional list': 'Сповідний розпис',
  'Parish register': 'Метрична книга',
  Revision: 'Ревізія',
};
---

<Layout title="Включені проіндексовані архівні справи">
  <style>
    table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 2rem;
      font-family: 'Times New Roman', serif;
    }
    th,
    td {
      padding: 0.75rem;
      text-align: center;
      border-bottom: 1px solid #ddd;
    }
    th {
      background-color: #343a40; /* Dark grey background */
      color: white;
    }
    td {
      white-space: nowrap;
    }
    th a {
      color: white;
    }
    th a:hover {
      text-decoration: underline;
    }
    tr:nth-child(even) {
      background-color: #f9f9f9;
    }
    tr:hover {
      background-color: #f1f1f1;
    }
    a {
      text-decoration: none;
      color: #343a40; /* Dark grey text */
      font-weight: bold;
    }
    a:hover {
      text-decoration: underline;
    }
    .flex-wrapper {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
    }
    td.genre {
      white-space: normal;
    }
  </style>
  <table>
    <thead>
      <tr>
        <th>Архівна справа</th>
        <th>Поселення</th>
        <th>Роки</th>
        <th>Різновид</th>
        <th>Таблиця</th>
        <th>Знімки</th>
      </tr>
    </thead>
    <tbody>
      {
        archiveItemTuples.map(([archiveItem, table]) => (
          <tr>
            <th scope="row">
              <a
                href={`/archive-item/${archiveItem.id}`}
                title={archiveItem.data.title}
              >
                {
                  archives.find(({ id }) => archiveItem.data.archive === id)!
                    .data.shortTitle
                }{' '}
                {archiveItem.data.identifier}
              </a>
              {archiveItem.data.isPartial && (
                <>
                  {' ('}
                  <em>частково</em>
                  {')'}
                </>
              )}
            </th>
            <td>
              {table!.data.settlements.split(', ').map((settlement) => (
                <SettlementName settlement={settlement} />
              ))}
            </td>
            <td>{table!.data.years}</td>
            <td class="genre">{ARCHIVE_ITEM_TYPES[archiveItem.data.genre]}</td>
            <td>
              <TitledLink href={archiveItem.data.gssUrl} />
            </td>
            <td>
              <div class="flex-wrapper">
                {archiveItem.data.archivedAt.map((scanUrl) => (
                  <TitledLink href={scanUrl} />
                ))}
              </div>
            </td>
          </tr>
        ))
      }
    </tbody>
  </table>
</Layout>
