---
import type { GetStaticPaths } from 'astro';
import { getCollection, getEntry } from 'astro:content';

import ConfessionalList from '../../components/confessional-list.astro';
import ParishRegister from '../../components/parish-register.astro';
import TitledLink from '../../components/titled-link.astro';
import getArchiveItemMicrodata from '../../ld/archive-item-microdata';
import { ArchiveItem } from '../../schemas/archive-item';

export const getStaticPaths = (async () => {
  const archiveItems = await getCollection('archive-items');

  return archiveItems.map((item) => ({
    params: {
      id: item.id,
    },
    props: { item: item.data },
  }));
}) satisfies GetStaticPaths;

export interface Props {
  item: ArchiveItem;
}

const { item } = Astro.props;
const { id: itemId } = Astro.params;
const archive = await getEntry('archives', item.archive);
const microdata = getArchiveItemMicrodata(item, archive.data);
---
{
  item.genre === 'Confessional list' && (
    <ConfessionalList item={item} itemId={itemId} microdata={microdata}>
      <p>
        Ця справа на інших ресурсах: <TitledLink href={item.gssUrl} />,{' '}
        {item.archivedAt.map((scanUrl) => (
          <TitledLink href={scanUrl} />
        ))}
      </p>
    </ParishRegister>
  )
}

{
  item.genre === 'Parish register' && (
    <ParishRegister item={item} itemId={itemId} microdata={microdata}>
      <p>
        Ця справа на інших ресурсах: <TitledLink href={item.gssUrl} />,{' '}
        {item.archivedAt.map((scanUrl) => (
          <TitledLink href={scanUrl} />
        ))}
      </p>
    </ParishRegister>
  )
}
